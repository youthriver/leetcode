
import logging
logging.basicConfig(format='%(asctime)s - %(filename)s[%(lineno)d] - %(levelname)s:%(message)s', level=logging.DEBUG)

# 打家劫舍(一) 中等
# 你是一个经验丰富的小偷，准备偷沿街的一排房间，每个房间都存有一定的现金，为了防止被发现，你不能偷相邻的两家，即，如果偷了第一家，就不能再偷第二家；如果偷了第二家，那么就不能偷第一家和第三家。
# 给定一个整数数组nums，数组中的元素表示每个房间存有的现金数额，请你计算在不被发现的前提下最多的偷窃金额。
# 数据范围：数组长度满足 1 <= n <= 2 * 10^5, 数组中每个值满足 1 <= num[i] <= 5000
# 示例1: 输入：[1,2,3,4], 返回值：6, 说明：最优方案是偷第 2，4 个房间
# 示例2: 输入：[1,3,6], 返回值：7, 说明：最优方案是偷第 1，3个房间
# 示例3: 输入：[2,10,5], 返回值：10, 说明：最优方案是偷第 2 个房间

def demo():
    arr = []

if __name__ == '__main__':
    demo()
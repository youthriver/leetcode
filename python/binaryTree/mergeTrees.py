
import logging
logging.basicConfig(format='%(asctime)s - %(filename)s[%(lineno)d] - %(levelname)s:%(message)s', level=logging.DEBUG)

# 合并二叉树 简单
# 已知两颗二叉树，将它们合并成一颗二叉树。合并规则是：都存在的结点，就将结点值加起来，否则空的位置就由另一个树的结点来代替。例如：
# 两颗二叉树是: [1, 3, 2, 5]; [2, 1, 3, #, 4, #, 7], 合并后的树为 [3, 4, 5, 5, 4, #, 7]
# 数据范围：树上节点数量满足 0 <= n <= 500, 树上节点的值一定在32位整型范围内。
# 进阶：空间复杂度O(1), 时间复杂度O(n)
# 示例1: 输入：{1,3,2,5},{2,1,3,#,4,#,7}, 返回值：{3,4,5,5,4,#,7}, 说明：如题面图
# 示例2: 输入：{1},{}, 返回值：{1}

def demo():
    arr = []

if __name__ == '__main__':
    demo()
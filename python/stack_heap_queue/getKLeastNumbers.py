
import logging
logging.basicConfig(format='%(asctime)s - %(filename)s[%(lineno)d] - %(levelname)s:%(message)s', level=logging.DEBUG)

# 最小的K个数 中等
# 给定一个长度为 n 的可能有重复值的数组，找出其中不去重的最小的 k 个数。例如数组元素是4,5,1,6,2,7,3,8这8个数字，则最小的4个数字是1,2,3,4(任意顺序皆可)。
# 数据范围：0 <= k, n <= 10000, 数组中每个数的大小 0 <= val <= 1000
# 要求：空间复杂度O(n), 时间复杂度O(nlogk)
# 示例1: 输入：[4,5,1,6,2,7,3,8],4 , 返回值：[1,2,3,4], 说明：返回最小的4个数即可，返回[1,3,2,4]也可以
# 示例2: 输入：[1],0, 返回值：[]
# 示例3: 输入：[0,1,2,1,2],3, 返回值：[0,1,1]

def demo():
    arr = []

if __name__ == '__main__':
    demo()